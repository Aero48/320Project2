{"version":3,"sources":["components/Builders.js","components/Connections.js","components/Description.js","components/LocationElement.js","MainList.js","App.js","reportWebVitals.js","index.js"],"names":["Builders","props","buildersList","locations","currentItem","builders","map","builder","ind","Grid","item","className","container","spacing","Connections","connectionsList","connections","connection","Description","useState","stateVar","setStateVar","possibleComponents","class","Stack","direction","divider","Divider","orientation","flexItem","src","image","width","name","Button","variant","onClick","LocationElement","place","divStyle","animationName","animationDuration","animationDelay","id","style","a","showDescription","MainList","setLocations","setCurrentItem","descriptionBool","setDescriptionBool","useEffect","fetch","then","result","json","data","console","log","description","locationList","itemId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74142f76.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Grid} from \"@mui/material\"\r\n\r\nexport default function Builders(props){\r\n    let locations = props.locations;\r\n    let currentItem = props.currentItem;\r\n\r\n    let buildersList = locations[currentItem].builders.map((builder, ind) => (\r\n        <Grid item key = {ind}>{builder}</Grid>\r\n    ))\r\n\r\n    return(\r\n        <div className=\"description-list\">\r\n            <h3>Builders:</h3>\r\n            <Grid container spacing={2}>\r\n                {buildersList}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Grid} from \"@mui/material\"\r\n\r\nexport default function Connections(props){\r\n    let locations = props.locations;\r\n    let currentItem = props.currentItem;\r\n\r\n    let connectionsList = locations[currentItem].connections.map((connection, ind) => (\r\n        <Grid item key={ind}>{connection}</Grid>\r\n    ))\r\n\r\n    return(\r\n        <div className=\"description-list\">\r\n            <h3>Connections:</h3>\r\n            <Grid container spacing={2}>\r\n                {connectionsList}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import react, { useState, useEffect } from \"react\";\r\nimport {Grid,Stack,Divider,Button} from \"@mui/material\";\r\nimport Builders from \"./Builders\";\r\nimport Connections from \"./Connections\";\r\n\r\nexport default function Description(props){\r\n\r\n    //let shownInfo = <Builders locations = {locations} currentItem = {currentItem}/>;\r\n    const [stateVar, setStateVar] = useState(0);\r\n    let locations = props.locations;\r\n    let currentItem = props.currentItem;\r\n\r\n    let possibleComponents = [ <Builders  locations = {locations} currentItem = {currentItem}/>, <Connections  locations = {locations} currentItem = {currentItem}/>];\r\n\r\n    //console.log(locations);\r\n    //console.log(currentItem);\r\n    return(\r\n        <div class = \"infoDiv\">\r\n            <Stack \r\n                  direction=\"column\" \r\n                  divider={<Divider orientation=\"horizontal\" flexItem />}\r\n                  spacing={0}\r\n                  >\r\n            <div>\r\n                <img src={locations[currentItem].image} width=\"500px\"/>\r\n                <h2>{locations[currentItem].name}</h2>\r\n                \r\n            </div>\r\n            <div>\r\n            <div className=\"description-buttoncontainer\">\r\n                <div>\r\n                    <Button \r\n                        variant = \"contained\" \r\n                        onClick={() => {\r\n                        setStateVar(0);\r\n                    }}>Builders</Button>\r\n                </div>\r\n                <div>\r\n                    <Button \r\n                        variant = \"contained\" \r\n                        onClick={() => {\r\n                        setStateVar(1);\r\n                    }}>Connections</Button>\r\n                </div>\r\n            \r\n            \r\n            </div>\r\n                {possibleComponents[stateVar]}\r\n            </div>\r\n            \r\n            </Stack>\r\n            \r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {List, ListItem, Button, Stack, Divider, Container, Grid} from \"@mui/material\";\r\nimport \"../main.css\";\r\n\r\nexport default function LocationElement(props){\r\n    let place = props.place;\r\n    let delay = place.id;\r\n    const divStyle = {\r\n        animationName: 'fadeIn',\r\n        animationDuration: '1s',\r\n        animationDelay: (delay*.1)+'s',\r\n    }\r\n    return(\r\n        <div class=\"listElement\" style={divStyle}>\r\n           <div class=\"listElementPart\"><img src={place.image} width=\"200px\"/></div>\r\n           <div class=\"listElementPart\">{place.name}</div>\r\n           <div class=\"listElementPart\"a><Button \r\n              variant = \"contained\" \r\n              onClick={() => {\r\n                props.showDescription(place.id);\r\n              }}>Details</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import react, { useState, useEffect } from \"react\";\r\nimport {List, ListItem, Button, Stack, Divider, Container, Grid} from \"@mui/material\";\r\nimport Description from \"./components/Description\";\r\nimport LocationElement from \"./components/LocationElement\";\r\nimport \"./main.css\";\r\n\r\nexport default function MainList(){\r\n\r\n    const [locations, setLocations] = useState([]); //List of locations from json file\r\n    const [currentItem, setCurrentItem] = useState(0); //Contains data from the selected location\r\n    const [descriptionBool, setDescriptionBool] = useState(false); //Whether the Description should be showing or not\r\n\r\n    //Pulls the data from the json file\r\n    useEffect(() => {\r\n        fetch(\"data/data.json\")\r\n          .then((result) => result.json())\r\n          .then((data) => {\r\n            //store data\r\n            setLocations(data);\r\n          });  \r\n      }, []);\r\n\r\n      console.log(\"Locations: \" + {locations});\r\n\r\n      let description = null;\r\n\r\n      if(descriptionBool){\r\n        description = \r\n        <div className=\"infoPanel\">\r\n          <Description locations = {locations} currentItem = {currentItem} />\r\n        </div>\r\n      }\r\n\r\n      //Maps out divs containing data from locationsList\r\n      const locationList = locations.map((place, ind) => (\r\n        <LocationElement key = {ind} place = {place} showDescription={showDescription}/>\r\n      ))\r\n\r\n    console.log(currentItem);\r\n    return (\r\n        <div>\r\n            <h1>Liminal World</h1>\r\n            <div className=\"containerDiv\">\r\n              <div className=\"subContainerLeft\">\r\n                <div className=\"listPanel\">\r\n                  \r\n                  <Stack \r\n                  direction=\"column\" \r\n                  divider={<Divider orientation=\"horizontal\" flexItem />}\r\n                  spacing={2}\r\n                  >\r\n                    <h2>Locations</h2>\r\n                    {locationList}\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n              <div className=\"subContainerRight\">\r\n                {description}\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    //Sets the current item to the one that was clicked on\r\n    function showDescription(itemId){\r\n      setCurrentItem(itemId)\r\n      setDescriptionBool(true);\r\n    }\r\n}","import MainList from \"./MainList.js\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}