{"version":3,"sources":["components/Builders.js","components/Description.js","components/LocationElement.js","MainList.js","App.js","reportWebVitals.js","index.js"],"names":["Builders","props","buildersList","locations","currentItem","builders","map","builder","Grid","item","container","spacing","Description","connections","connection","class","Stack","direction","divider","Divider","orientation","flexItem","src","image","width","name","LocationElement","place","divStyle","animationName","animationDuration","animationDelay","id","style","a","Button","variant","onClick","showDescription","MainList","useState","setLocations","setCurrentItem","descriptionBool","setDescriptionBool","useEffect","fetch","then","result","json","data","console","log","description","locationList","itemId","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1f64e46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Grid} from \"@mui/material\"\r\n\r\nexport default function Builders(props){\r\n    let locations = props.locations;\r\n    let currentItem = props.currentItem;\r\n\r\n    let buildersList = locations[currentItem].builders.map((builder) => (\r\n        <Grid item>{builder}</Grid>\r\n    ))\r\n\r\n    return(\r\n        <div>\r\n            <h3>Builders:</h3>\r\n            <Grid container spacing={2}>\r\n                {buildersList}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Grid,Stack,Divider} from \"@mui/material\";\r\nimport Builders from \"./Builders\";\r\n\r\nexport default function Description(props){\r\n    let locations = props.locations;\r\n    let currentItem = props.currentItem;\r\n\r\n    \r\n\r\n    let connectionsList = locations[currentItem].connections.map((connection) => (\r\n        <Grid item>{connection}</Grid>\r\n    ))\r\n    \r\n    //console.log(locations);\r\n    //console.log(currentItem);\r\n    return(\r\n        <div class = \"infoDiv\">\r\n            <Stack \r\n                  direction=\"column\" \r\n                  divider={<Divider orientation=\"horizontal\" flexItem />}\r\n                  spacing={0}\r\n                  >\r\n            <div>\r\n                <img src={locations[currentItem].image} width=\"600px\"/>\r\n                <h2>{locations[currentItem].name}</h2>\r\n            </div>\r\n            \r\n            <Builders locations = {locations} currentItem = {currentItem}/>\r\n            </Stack>\r\n            \r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {List, ListItem, Button, Stack, Divider, Container, Grid} from \"@mui/material\";\r\nimport \"../main.css\";\r\n\r\nexport default function LocationElement(props){\r\n    let place = props.place;\r\n    let delay = place.id;\r\n    const divStyle = {\r\n        animationName: 'fadeIn',\r\n        animationDuration: '1s',\r\n        animationDelay: (delay*.1)+'s',\r\n    }\r\n    return(\r\n        <div class=\"listElement\" style={divStyle}>\r\n           <div class=\"listElementPart\"><img src={place.image} width=\"200px\"/></div>\r\n           <div class=\"listElementPart\">{place.name}</div>\r\n           <div class=\"listElementPart\"a><Button \r\n              variant = \"contained\" \r\n              onClick={() => {\r\n                props.showDescription(place.id);\r\n              }}>Details</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import react, { useState, useEffect } from \"react\";\r\nimport {List, ListItem, Button, Stack, Divider, Container, Grid} from \"@mui/material\";\r\nimport Description from \"./components/Description\";\r\nimport LocationElement from \"./components/LocationElement\";\r\nimport \"./main.css\";\r\n\r\nexport default function MainList(){\r\n\r\n    const [locations, setLocations] = useState([]); //List of locations from json file\r\n    const [currentItem, setCurrentItem] = useState(0); //Contains data from the selected location\r\n    const [descriptionBool, setDescriptionBool] = useState(false); //Whether the Description should be showing or not\r\n\r\n    //Pulls the data from the json file\r\n    useEffect(() => {\r\n        fetch(\"data/data.json\")\r\n          .then((result) => result.json())\r\n          .then((data) => {\r\n            //store data\r\n            setLocations(data);\r\n          });  \r\n      }, []);\r\n\r\n      console.log(locations);\r\n\r\n      let description = null;\r\n\r\n      if(descriptionBool){\r\n        description = \r\n        <div class=\"infoPanel\">\r\n          <Description locations = {locations} currentItem = {currentItem} />\r\n        </div>\r\n      }\r\n\r\n      //Maps out divs containing data from locationsList\r\n      const locationList = locations.map((place) => (\r\n        <LocationElement key = {place.id} place = {place} showDescription={showDescription}/>\r\n      ))\r\n\r\n    console.log(currentItem);\r\n    return (\r\n        <div>\r\n            <h1>Liminal World</h1>\r\n            <div class=\"containerDiv\">\r\n              <div class=\"subContainerLeft\">\r\n                <div class=\"listPanel\">\r\n                  \r\n                  <Stack \r\n                  direction=\"column\" \r\n                  divider={<Divider orientation=\"horizontal\" flexItem />}\r\n                  spacing={2}\r\n                  >\r\n                    <h2>Locations</h2>\r\n                    {locationList}\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n              <div class=\"subContainerRight\">\r\n                {description}\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    //Sets the current item to the one that was clicked on\r\n    function showDescription(itemId){\r\n      setCurrentItem(itemId)\r\n      setDescriptionBool(true);\r\n    }\r\n}","import MainList from \"./MainList.js\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}